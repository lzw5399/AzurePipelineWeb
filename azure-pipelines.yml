# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  tagName: '$(Build.BuildNumber)'
  imageName: 'azurePlpelineWeb'

steps:

- script: dotnet build -c Release
  displayName: 'dotnet build'

- script: docker build -f Dockerfile -t $(imageName) .
  displayName: 'Docker build Script'

- script: |
    docker login -u $(dockerId) -p $(pswd)
    docker push $(imageName)
  displayName: 'Push docker image'

- task: SSH@0
  displayName: 'Run shell inline on remote machine'
  inputs:
    sshEndpoint: 'aliyun_centos'
    runOptions: inline

    inline: |
      containers=$(docker ps -q --filter name=$(imageName))
      if test -n "$containers"; 
      then
      docker stop $(docker ps -q --filter name=$(imageName)) >> /dev/null 2>&1
      rc=$?
      if [[ $rc != 0 ]];
      then
       echo 'failed to stop container...'
       exit $rc;
      fi
      fi
     
      containers1=$(docker ps -q -a --filter name=$(imageName))
      if test -n "$containers1"; 
      then
      docker rm $(docker ps -q -a --filter name=$(imageName)) >> /dev/null 2>&1
      rc=$?
      if [[ $rc != 0 ]];
      then
       echo 'failed to remove container...'
       exit $rc;
      fi
      fi
     
     
      docker pull $(imageName):latest >> /dev/null 2>&1
      rc=$?
      if [[ $rc != 0 ]];
      then
       echo 'failed to pull container...'
       exit $rc;
      fi
     
      docker run -d -p 80:80 --name $(imageName)  >> /dev/null 2>&1
      rc=$?
      if [[ $rc != 0 ]];
      then
       echo 'failed to run container...'
       exit $rc;
      fi
     
      danglings=$(docker images -f "dangling=true" -q)
      if test -n "$danglings";
      then
      docker rmi $(docker images -f "dangling=true" -q) >> /dev/null 2>&1
      rc=$?
      if [[ $rc != 0 ]];
      then
       echo 'failed to remove danglings container...'
       exit $rc;
      fi
      fi